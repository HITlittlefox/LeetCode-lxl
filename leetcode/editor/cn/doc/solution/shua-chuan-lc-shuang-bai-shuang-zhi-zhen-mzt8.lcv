## 双指针解法

本解法的思路与 [【题解】26. 删除排序数组中的重复项](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/shua-chuan-lc-jian-ji-shuang-zhi-zhen-ji-2eg8/) 中的「双指针解法」类似。

根据题意，我们可以将数组分成「前后」两段：

* 前半段是有效部分，存储的是不等于 `val` 的元素。
* 后半段是无效部分，存储的是等于 `val` 的元素。

最终答案返回有效部分的结尾下标。

代码：

* []

```Java
class Solution {
    public int removeElement(int[] nums, int val) {
        int j = nums.length - 1;
        for (int i = 0; i <= j; i++) {
            if (nums[i] == val) {
                swap(nums, i--, j--);
            }
        }
        return j + 1;
    }
    void swap(int[] nums, int i, int j) {
        int tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
    }
}
```

* []

```C++
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int j = nums.size() - 1;
        for (int i = 0; i <= j; i++) {
            if (nums[i] == val) {
                swap(nums[i--], nums[j--]);
            }
        }
        return j + 1;
    }
};
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

***

## 通用解法

本解法的思路与 [【题解】26. 删除排序数组中的重复项](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/shua-chuan-lc-jian-ji-shuang-zhi-zhen-ji-2eg8/) 中的「通用解法」类似。

先设定变量 `idx`，指向待插入位置。`idx` 初始值为 0

**然后从题目的「要求/保留逻辑」出发，来决定当遍历到任意元素 `x` 时，应该做何种决策：**
* 如果当前元素 `x` 与移除元素 `val` 相同，那么跳过该元素。
* 如果当前元素 `x` 与移除元素 `val` 不同，那么我们将其放到下标 `idx` 的位置，并让 `idx` 自增右移。

最终得到的 `idx` 即是答案。

代码：

* []

```Java
class Solution {
    public int removeElement(int[] nums, int val) {
        int idx = 0;
        for (int x : nums) {
            if (x != val) nums[idx++] = x;
        }
        return idx;
    }
}
```

* []

```C++
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int idx = 0;
        for(auto x : nums)
            if(x != val)nums[idx++] = x;
        return idx;
    }
};
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

***

## 拓展

想锻炼一下从「题目要求」提炼「保留逻辑」能力的同学，可以看下以下题目：

[（原题）26. 删除有序数组中的重复项](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/) : [（题解）一题双解 :「双指针」&「通用」解法](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/shua-chuan-lc-jian-ji-shuang-zhi-zhen-ji-2eg8/)

[（原题）80. 删除有序数组中的重复项 II](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/) : [（题解）关于「删除有序数组重复项」的通解](https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/solution/gong-shui-san-xie-guan-yu-shan-chu-you-x-glnq/)

***

## 总结

**对于诸如「相同元素最多保留 `k` 位元素」或者「移除特定元素」的问题，更好的做法是从题目本身性质出发，利用题目给定的要求提炼出具体的「保留逻辑」，将「保留逻辑」应用到我们的遍历到的每一个位置。**

